{"ast":null,"code":"var _jsxFileName = \"/var/www/picsart/news-app/src/components/ContactForm/TextField.jsx\";\nimport React, { PureComponent } from \"react\";\n\nclass TextField extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n      error: null\n    };\n\n    this.handleInputChange = e => {\n      this.props.onChange(e);\n      const value = e.target.value;\n      this.setState({\n        value\n      });\n    };\n\n    this.validate = () => {\n      let error = '';\n      error = this.props.validate(this.state.value);\n      this.setState({\n        error\n      });\n      if (!error) return;\n      return {\n        [this.props.name]: error\n      };\n    };\n\n    this.validate = this.validate.bind(this);\n  }\n\n  render() {\n    const {\n      value,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.type === 'text' ? /*#__PURE__*/React.createElement(\"input\", {\n      value: value,\n      placeholder: this.props.placeholder,\n      type: \"text\",\n      name: this.props.name,\n      onChange: e => this.handleInputChange(e),\n      onBlur: this.validate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"textarea\", {\n      defaultValue: value,\n      placeholder: this.props.placeholder,\n      name: this.props.name,\n      rows: \"4\",\n      onChange: e => this.handleInputChange(e),\n      onBlur: this.validate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, error));\n  }\n\n}\n\nexport default TextField;","map":{"version":3,"sources":["/var/www/picsart/news-app/src/components/ContactForm/TextField.jsx"],"names":["React","PureComponent","TextField","constructor","props","state","value","error","handleInputChange","e","onChange","target","setState","validate","name","bind","render","type","placeholder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,MAAMC,SAAN,SAAwBD,aAAxB,CAAsC;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAKnBC,KALmB,GAKX;AACNC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADZ;AAENC,MAAAA,KAAK,EAAE;AAFD,KALW;;AAAA,SAUnBC,iBAVmB,GAUEC,CAAD,IAAO;AACzB,WAAKL,KAAL,CAAWM,QAAX,CAAoBD,CAApB;AACA,YAAMH,KAAK,GAAGG,CAAC,CAACE,MAAF,CAASL,KAAvB;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAdkB;;AAAA,SAgBnBO,QAhBmB,GAgBR,MAAM;AACf,UAAIN,KAAK,GAAG,EAAZ;AACAA,MAAAA,KAAK,GAAG,KAAKH,KAAL,CAAWS,QAAX,CAAoB,KAAKR,KAAL,CAAWC,KAA/B,CAAR;AACA,WAAKM,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd;AACA,UAAI,CAACA,KAAL,EAAY;AACZ,aAAO;AAAE,SAAC,KAAKH,KAAL,CAAWU,IAAZ,GAAmBP;AAArB,OAAP;AACD,KAtBkB;;AAEjB,SAAKM,QAAL,GAAgB,KAAKA,QAAL,CAAcE,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAqBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKF,KAA9B;AACA,wBACE,0CACG,KAAKD,KAAL,CAAWa,IAAX,KAAoB,MAApB,gBACC;AACE,MAAA,KAAK,EAAEX,KADT;AAEE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWc,WAF1B;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWU,IAJnB;AAKE,MAAA,QAAQ,EAAGL,CAAD,IAAO,KAAKD,iBAAL,CAAuBC,CAAvB,CALnB;AAME,MAAA,MAAM,EAAE,KAAKI,QANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAUC;AACE,MAAA,YAAY,EAAEP,KADhB;AAEE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWc,WAF1B;AAGE,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWU,IAHnB;AAIE,MAAA,IAAI,EAAC,GAJP;AAKE,MAAA,QAAQ,EAAGL,CAAD,IAAO,KAAKD,iBAAL,CAAuBC,CAAvB,CALnB;AAME,MAAA,MAAM,EAAE,KAAKI,QANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQN,KAAR,CApBF,CADF;AAwBD;;AAnDmC;;AAsDtC,eAAeL,SAAf","sourcesContent":["import React, { PureComponent } from \"react\";\n\nclass TextField extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.validate = this.validate.bind(this)\n  }\n  \n  state = {\n    value: this.props.value,\n    error: null\n  };\n  \n  handleInputChange = (e) => {\n    this.props.onChange(e);\n    const value = e.target.value;\n    this.setState({ value })\n  };\n  \n  validate = () => {\n    let error = '';\n    error = this.props.validate(this.state.value);\n    this.setState({error});\n    if (!error) return;\n    return { [this.props.name]: error }\n  };\n  \n  render() {\n    const { value, error } = this.state;\n    return(\n      <>\n        {this.props.type === 'text' ? (\n          <input\n            value={value}\n            placeholder={this.props.placeholder}\n            type=\"text\"\n            name={this.props.name}\n            onChange={(e) => this.handleInputChange(e)}\n            onBlur={this.validate}\n          />\n        ) : (\n          <textarea\n            defaultValue={value}\n            placeholder={this.props.placeholder}\n            name={this.props.name}\n            rows=\"4\"\n            onChange={(e) => this.handleInputChange(e)}\n            onBlur={this.validate}\n          />\n        )}\n        <span>{ error }</span>\n      </>\n    )\n  }\n}\n\nexport default TextField\n"]},"metadata":{},"sourceType":"module"}