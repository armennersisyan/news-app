{"ast":null,"code":"var _jsxFileName = \"/var/www/picsart/news-app/src/components/ContactForm/index.jsx\";\nimport React, { PureComponent } from \"react\";\nimport TextField from './TextField';\nimport SuccessMessage from './SuccessMessage';\nimport styles from './style.module.scss';\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        email: '',\n        message: ''\n      },\n      isSent: false,\n      errors: {}\n    };\n\n    this.handleInputChange = e => {\n      const fields = { ...this.state.fields\n      };\n      const key = e.target.name;\n      const value = e.target.value;\n      fields[key] = value;\n      this.setState({\n        fields,\n        isSent: false\n      });\n    };\n\n    this.handleSendClick = () => {\n      const errors = this.validate();\n      this.setState({\n        errors\n      });\n      if (Object.keys(errors).length) return;\n      this.handleSuccess();\n    };\n\n    this.validate = () => {\n      const errors = { ...this.emailFieldRef.current.validate(),\n        ...this.messageFieldRef.current.validate()\n      };\n      this.setState({\n        errors\n      });\n      return errors;\n    };\n\n    this.handleSuccess = () => {\n      this.setState({\n        isSent: true\n      });\n    };\n\n    this.emailFieldRef = React.createRef();\n    this.messageFieldRef = React.createRef();\n  }\n\n  render() {\n    const {\n      email,\n      message\n    } = this.state.fields;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles['contact-form'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Get in touch\")), /*#__PURE__*/React.createElement(TextField, {\n      ref: this.emailFieldRef,\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Your Email address\",\n      value: email,\n      validate: val => !val && 'Email Required',\n      onChange: e => this.handleInputChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      ref: this.messageFieldRef,\n      type: \"textarea\",\n      name: \"message\",\n      placeholder: \"Your Message\",\n      value: message,\n      validate: val => !val && 'Message Required',\n      onChange: e => this.handleInputChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: styles['contact-form__btn'],\n      onClick: this.handleSendClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Send Message\")), /*#__PURE__*/React.createElement(SuccessMessage, {\n      show: this.state.isSent,\n      message: \"Your message has been sent successfully!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nContactForm.propTypes = {\n  onSuccess: PropTypes.func\n};\nexport default ContactForm;","map":{"version":3,"sources":["/var/www/picsart/news-app/src/components/ContactForm/index.jsx"],"names":["React","PureComponent","TextField","SuccessMessage","styles","PropTypes","ContactForm","constructor","props","state","fields","email","message","isSent","errors","handleInputChange","e","key","target","name","value","setState","handleSendClick","validate","Object","keys","length","handleSuccess","emailFieldRef","current","messageFieldRef","createRef","render","val","propTypes","onSuccess","func"],"mappings":"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","sourcesContent":["import React, {PureComponent} from \"react\";\nimport TextField from './TextField';\nimport SuccessMessage from './SuccessMessage';\nimport styles from './style.module.scss';\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.emailFieldRef = React.createRef();\n    this.messageFieldRef = React.createRef();\n  }\n  \n  static propTypes = {\n    onSuccess: PropTypes.func,\n  };\n  \n  state = {\n    fields: {\n      email: '',\n      message: '',\n    },\n    isSent: false,\n    errors: {}\n  };\n  \n  handleInputChange = (e) => {\n    const fields = { ...this.state.fields };\n    const key = e.target.name;\n    const value = e.target.value;\n    fields[key] = value;\n    this.setState({\n      fields,\n      isSent: false,\n    })\n  };\n  \n  handleSendClick = () => {\n    const errors = this.validate();\n    this.setState({ errors });\n    if (Object.keys(errors).length) return;\n    this.handleSuccess()\n  };\n  \n  validate = () => {\n    const errors = {\n      ...this.emailFieldRef.current.validate(),\n      ...this.messageFieldRef.current.validate()\n    };\n    this.setState({ errors });\n    return errors\n  };\n  \n  handleSuccess = () => {\n    this.setState({ isSent: true });\n  };\n  \n  render() {\n    const { email, message } = this.state.fields;\n    return (\n      <div className={styles['contact-form']}>\n        <div className=\"text-center\">\n          <h2>Get in touch</h2>\n        </div>\n        <TextField\n          ref={this.emailFieldRef}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your Email address\"\n          value={email}\n          validate={(val) => (!val && 'Email Required')}\n          onChange={(e) => this.handleInputChange(e)}\n        />\n        \n        <TextField\n          ref={this.messageFieldRef}\n          type=\"textarea\"\n          name=\"message\"\n          placeholder=\"Your Message\"\n          value={message}\n          validate={(val) => (!val && 'Message Required')}\n          onChange={(e) => this.handleInputChange(e)}\n        />\n        \n        <div className=\"text-center\">\n          <button\n            className={styles['contact-form__btn']}\n            onClick={this.handleSendClick}\n          >\n            Send Message\n          </button>\n        </div>\n        <SuccessMessage\n          show={this.state.isSent}\n          message=\"Your message has been sent successfully!\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}